generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["orderByRelation"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model abundance {
  id          Int       @id @default(autoincrement())
  abundance   String    @unique
  description String?
  reference   String?
  species     species[]
}

model alias {
  id            Int             @id @default(autoincrement())
  name          String
  type          String
  description   String          @default("")
  aliasspecies  aliasspecies[]
  speciessource speciessource[]
  taxonomyalias taxonomyalias[]
}

model aliasspecies {
  species_id Int
  alias_id   Int
  alias      alias   @relation(fields: [alias_id], references: [id])
  species    species @relation(fields: [species_id], references: [id])

  @@id([species_id, alias_id])
}

model alignment {
  id            Int             @id @default(autoincrement())
  alignment     String          @unique
  description   String?
  gallalignment gallalignment[]
}

model cells {
  id          Int         @id @default(autoincrement())
  cells       String      @unique
  description String?
  gallcells   gallcells[]
}

model color {
  id        Int         @id @default(autoincrement())
  color     String      @unique
  gallcolor gallcolor[]
}

model form {
  id          Int        @id @default(autoincrement())
  form        String     @unique
  description String?
  gallform    gallform[]
}

model gall {
  id            Int             @id @default(autoincrement())
  taxoncode     String
  detachable    Int?
  undescribed   Boolean         @default(false)
  taxontype     taxontype       @relation(fields: [taxoncode], references: [taxoncode])
  gallalignment gallalignment[]
  gallcells     gallcells[]
  gallcolor     gallcolor[]
  galllocation  galllocation[]
  gallshape     gallshape[]
  gallspecies   gallspecies[]
  galltexture   galltexture[]
  gallwalls     gallwalls[]
  gallseason    gallseason[]
  gallform      gallform[]
}

model gallalignment {
  gall_id      Int
  alignment_id Int
  alignment    alignment @relation(fields: [alignment_id], references: [id])
  gall         gall      @relation(fields: [gall_id], references: [id])

  @@id([gall_id, alignment_id])
}

model gallcells {
  gall_id  Int
  cells_id Int
  cells    cells @relation(fields: [cells_id], references: [id])
  gall     gall  @relation(fields: [gall_id], references: [id])

  @@id([gall_id, cells_id])
}

model gallcolor {
  gall_id  Int
  color_id Int
  color    color @relation(fields: [color_id], references: [id])
  gall     gall  @relation(fields: [gall_id], references: [id])

  @@id([gall_id, color_id])
}

model galllocation {
  gall_id     Int
  location_id Int
  gall        gall     @relation(fields: [gall_id], references: [id])
  location    location @relation(fields: [location_id], references: [id])

  @@id([gall_id, location_id])
}

model gallshape {
  gall_id  Int
  shape_id Int
  gall     gall  @relation(fields: [gall_id], references: [id])
  shape    shape @relation(fields: [shape_id], references: [id])

  @@id([gall_id, shape_id])
}

model gallspecies {
  species_id Int
  gall_id    Int
  gall       gall    @relation(fields: [gall_id], references: [id])
  species    species @relation(fields: [species_id], references: [id])

  @@id([species_id, gall_id])
}

model galltexture {
  gall_id    Int
  texture_id Int
  gall       gall    @relation(fields: [gall_id], references: [id])
  texture    texture @relation(fields: [texture_id], references: [id])

  @@id([gall_id, texture_id])
}

model gallwalls {
  gall_id  Int
  walls_id Int
  gall     gall  @relation(fields: [gall_id], references: [id])
  walls    walls @relation(fields: [walls_id], references: [id])

  @@id([gall_id, walls_id])
}

model gallform {
  gall_id Int
  form_id Int
  gall    gall @relation(fields: [gall_id], references: [id])
  form    form @relation(fields: [form_id], references: [id])

  @@id([gall_id, form_id])
}

model glossary {
  id         Int    @id @default(autoincrement())
  word       String @unique
  definition String
  urls       String
}

model host {
  id              Int      @id @default(autoincrement())
  host_species_id Int?
  gall_species_id Int?
  gallspecies     species? @relation("host_gall_species_idTospecies", fields: [gall_species_id], references: [id])
  hostspecies     species? @relation("host_host_species_idTospecies", fields: [host_species_id], references: [id])
}

model image {
  id            Int     @id @default(autoincrement())
  species_id    Int
  source_id     Int?
  path          String  @unique
  default       Boolean @default(false)
  creator       String
  attribution   String
  sourcelink    String
  license       String
  licenselink   String
  uploader      String
  lastchangedby String
  caption       String
  source        source? @relation(fields: [source_id], references: [id])
  species       species @relation(fields: [species_id], references: [id])
}

model location {
  id           Int            @id @default(autoincrement())
  location     String         @unique
  description  String?
  galllocation galllocation[]
}

model migration {
  id   Int    @id @default(autoincrement())
  name String
  up   String
  down String
}

model place {
  id       Int            @id @default(autoincrement())
  name     String         @unique
  code     String
  type     String
  children placeplace[]   @relation("children")
  parent   placeplace[]   @relation("parent")
  species  speciesplace[] @relation("placeTospeciesplace_place_id")
}

model placeplace {
  place_id  Int
  parent_id Int
  child     place @relation("children", fields: [place_id], references: [id])
  parent    place @relation("parent", fields: [parent_id], references: [id])

  @@id([place_id, parent_id])
}

model speciesplace {
  species_id Int
  place_id   Int
  species    species @relation("speciesTospeciespalce_species_id", fields: [species_id], references: [id])
  place      place   @relation("placeTospeciesplace_place_id", fields: [place_id], references: [id])


  @@id([species_id, place_id])
}

model shape {
  id          Int         @id @default(autoincrement())
  shape       String      @unique
  description String?
  gallshape   gallshape[]
}

model source {
  id            Int             @id @default(autoincrement())
  title         String          @unique
  author        String
  pubyear       String
  link          String
  citation      String
  datacomplete  Boolean         @default(false)
  license       String
  licenselink   String
  image         image[]
  speciessource speciessource[]
}

model species {
  id              Int               @id @default(autoincrement())
  taxoncode       String?
  name            String            @unique
  datacomplete    Boolean           @default(false)
  abundance_id    Int?
  abundance       abundance?        @relation(fields: [abundance_id], references: [id])
  taxontype       taxontype?        @relation(fields: [taxoncode], references: [taxoncode])
  aliasspecies    aliasspecies[]
  gallspecies     gallspecies[]
  hosts           host[]            @relation("host_gall_species_idTospecies")
  host_galls      host[]            @relation("host_host_species_idTospecies")
  image           image[]
  speciessource   speciessource[]
  speciestaxonomy speciestaxonomy[]
  places          speciesplace[]    @relation("speciesTospeciespalce_species_id")
}

model speciessource {
  id           Int     @id @default(autoincrement())
  species_id   Int
  source_id    Int
  description  String  @default("")
  useasdefault Int     @default(0)
  externallink String  @default("")
  alias_id     Int?
  alias        alias?  @relation(fields: [alias_id], references: [id])
  source       source  @relation(fields: [source_id], references: [id])
  species      species @relation(fields: [species_id], references: [id])
}

model speciestaxonomy {
  species_id  Int
  taxonomy_id Int
  species     species  @relation(fields: [species_id], references: [id])
  taxonomy    taxonomy @relation(fields: [taxonomy_id], references: [id])

  @@id([species_id, taxonomy_id])
}

model taxonomy {
  id               Int                @id @default(autoincrement())
  name             String
  description      String?            @default("")
  type             String
  parent_id        Int?
  parent           taxonomy?          @relation("taxonomyTotaxonomy_parent_id", fields: [parent_id], references: [id])
  speciestaxonomy  speciestaxonomy[]
  taxonomy         taxonomy[]         @relation("taxonomyTotaxonomy_parent_id")
  taxonomyalias    taxonomyalias[]
  children         taxonomytaxonomy[] @relation("taxonomyTotaxonomytaxonomy_child_id")
  taxonomytaxonomy taxonomytaxonomy[] @relation("taxonomyTotaxonomytaxonomy_taxonomy_id")
}

model taxonomyalias {
  taxonomy_id Int
  alias_id    Int
  alias       alias    @relation(fields: [alias_id], references: [id])
  taxonomy    taxonomy @relation(fields: [taxonomy_id], references: [id])

  @@id([taxonomy_id, alias_id])
}

model taxonomytaxonomy {
  taxonomy_id Int
  child_id    Int
  child       taxonomy @relation("taxonomyTotaxonomytaxonomy_child_id", fields: [child_id], references: [id])
  taxonomy    taxonomy @relation("taxonomyTotaxonomytaxonomy_taxonomy_id", fields: [taxonomy_id], references: [id])

  @@id([taxonomy_id, child_id])
}

model taxontype {
  taxoncode   String    @id
  description String    @unique
  gall        gall[]
  species     species[]
}

model texture {
  id          Int           @id @default(autoincrement())
  texture     String        @unique
  description String?
  galltexture galltexture[]
}

model walls {
  id          Int         @id @default(autoincrement())
  walls       String      @unique
  description String?
  gallwalls   gallwalls[]
}

model gallseason {
  id        Int     @id @default(autoincrement())
  gall_id   Int
  season_id Int
  gall      gall   @relation(fields: [gall_id], references: [id])
  season    season @relation(fields: [season_id], references: [id])
}

model season {
  id         Int          @id @default(autoincrement())
  season     String       @unique
  gallseason gallseason[]
}
